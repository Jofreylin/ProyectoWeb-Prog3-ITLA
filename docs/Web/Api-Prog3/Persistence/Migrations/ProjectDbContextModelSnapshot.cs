// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    partial class ProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasName("UQ__CATEGORI__75E3EFCF7C426275");

                    b.ToTable("CATEGORIA");
                });

            modelBuilder.Entity("Model.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<int>("NombrePais")
                        .HasColumnName("Nombre_Pais")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NombrePais");

                    b.ToTable("CIUDAD");
                });

            modelBuilder.Entity("Model.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasName("UQ__PAIS__75E3EFCFD08B0375");

                    b.ToTable("PAIS");
                });

            modelBuilder.Entity("Model.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("DireccionUrl")
                        .HasColumnName("Direccion_URL")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Fecha_Creacion")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NombreCalle")
                        .HasColumnName("Nombre_Calle")
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(90)
                        .IsUnicode(false);

                    b.Property<int>("NombreCategoria")
                        .HasColumnName("Nombre_Categoria")
                        .HasColumnType("int");

                    b.Property<int>("NombreCiudad")
                        .HasColumnName("Nombre_Ciudad")
                        .HasColumnType("int");

                    b.Property<int>("NombrePais")
                        .HasColumnName("Nombre_Pais")
                        .HasColumnType("int");

                    b.Property<string>("NombrePosicion")
                        .IsRequired()
                        .HasColumnName("Nombre_Posicion")
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(90)
                        .IsUnicode(false);

                    b.Property<int>("NombreTipoTrabajo")
                        .HasColumnName("Nombre_Tipo_Trabajo")
                        .HasColumnType("int");

                    b.Property<int>("Poster")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NombreCategoria");

                    b.HasIndex("NombreCiudad");

                    b.HasIndex("NombrePais");

                    b.HasIndex("NombreTipoTrabajo");

                    b.ToTable("POST");
                });

            modelBuilder.Entity("Model.TipoTrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasName("UQ__TIPO_TRA__75E3EFCFA3F31137");

                    b.ToTable("TIPO_TRABAJO");
                });

            modelBuilder.Entity("Model.UserAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(90)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(90)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Fecha_Creacion")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(90)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Usuario")
                        .IsUnique()
                        .HasName("UQ__USER_ADM__E3237CF72DA8FDC4");

                    b.ToTable("USER_ADMIN");
                });

            modelBuilder.Entity("Model.UserPoster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contra")
                        .IsRequired()
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(90)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(90)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Fecha_Creacion")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NombreCalle")
                        .HasColumnName("Nombre_Calle")
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(90)
                        .IsUnicode(false);

                    b.Property<int>("NombreCiudad")
                        .HasColumnName("Nombre_Ciudad")
                        .HasColumnType("int");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnName("Nombre_Empresa")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<int>("NombrePais")
                        .HasColumnName("Nombre_Pais")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UQ__USER_POS__A9D10534E7793F11");

                    b.HasIndex("NombreCiudad");

                    b.HasIndex("NombrePais");

                    b.ToTable("USER_POSTER");
                });

            modelBuilder.Entity("Model.Ciudad", b =>
                {
                    b.HasOne("Model.Pais", "NombrePaisNavigation")
                        .WithMany("Ciudad")
                        .HasForeignKey("NombrePais")
                        .HasConstraintName("FK_CIUDAD_PAIS")
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Post", b =>
                {
                    b.HasOne("Model.Categoria", "NombreCategoriaNavigation")
                        .WithMany("Post")
                        .HasForeignKey("NombreCategoria")
                        .HasConstraintName("FK_POST_CATEGORIA")
                        .IsRequired();

                    b.HasOne("Model.Ciudad", "NombreCiudadNavigation")
                        .WithMany("Post")
                        .HasForeignKey("NombreCiudad")
                        .HasConstraintName("FK_POST_CIUDAD")
                        .IsRequired();

                    b.HasOne("Model.Pais", "NombrePaisNavigation")
                        .WithMany("Post")
                        .HasForeignKey("NombrePais")
                        .HasConstraintName("FK_POST_PAIS")
                        .IsRequired();

                    b.HasOne("Model.TipoTrabajo", "NombreTipoTrabajoNavigation")
                        .WithMany("Post")
                        .HasForeignKey("NombreTipoTrabajo")
                        .HasConstraintName("FK_POST_TRABAJO")
                        .IsRequired();
                });

            modelBuilder.Entity("Model.UserPoster", b =>
                {
                    b.HasOne("Model.Ciudad", "NombreCiudadNavigation")
                        .WithMany("UserPoster")
                        .HasForeignKey("NombreCiudad")
                        .HasConstraintName("FK_POSTER_CIUDAD")
                        .IsRequired();

                    b.HasOne("Model.Pais", "NombrePaisNavigation")
                        .WithMany("UserPoster")
                        .HasForeignKey("NombrePais")
                        .HasConstraintName("FK_POSTER_PAIS")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
